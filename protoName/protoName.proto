syntax = "proto3";

package protoName;


// Para leer/escribir en el log 
message LogData { 
    string bookName = 1;
    int64 numParts = 2;
    repeated Part partsLocation = 3;
}

message Part {
    int64 index = 1;
    int64 datanode = 2;
}

// Quiero leer el log (se lo envio a todos)
message ReadRequest {
    string id = 1;
    int64 node = 2;
    string bookname = 3; 
    int64 timestamp = 4; 
}

// Quiero escribir el log (se lo envio a todos)
message WriteRequest {
    string id = 1;
    int64 node = 2;
    int64 timestamp = 3; 
}


// Enviamos una propuesta al nodo (al nodo que recibe el msg)
message Proposal {
    string id = 1;
    int64 node = 2;
    int64 numChunks = 3;
    int64 timestamp = 4;
    string bookName = 5;
    repeated Chunk chunksPackage = 6;
}


// 1 = apruebo  0 = rechazo
message Response {
    string id = 1;
    int64 timestamp = 2;
    bool response = 3;
}

// Chunks Set

message Chunk {
    string fileName = 1; 
    int64 numChunkActual = 2;
    bytes chunk = 3;
}

message Empty {}

service ProtoNameService {
    
    // Metodos NameNode-Datanode
        // Coordinación entre DataNodes y entre NameNode con DataNode para verificar la propuesta
    rpc DistributeProposal(Proposal) returns (Response) {}
        //Función para escribir el Log
    rpc WriteLog(LogData) returns (Empty) {}

    // Metodos cliente-NameNode
        // El cliente pide leer el Log para saber ubicación de los Chunks
    rpc ClientRequest(ReadRequest) returns (LogData) {} 
}

option go_package = "github.com/BSolarV/tarea2-sd-winducloveer/protoName";

// Pa compilar
// protoc --go_opt=paths=source_relative --go_out=plugins=grpc:. .\protoName\protoName.proto